{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","All","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","onTodoSelect","selectedTodo","className","map","classNames","id","completed","title","onClick","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoFilter","dispatch","onSubmit","event","preventDefault","value","onChange","e","target","filterActions","Object","entries","key","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","currUser","setCurrUser","isLoading","setIsLoading","useEffect","userId","user","catch","finally","currentTodoActions","href","email","name","setVisibleTodos","createSelector","isMatch","str","toLowerCase","includes","Active","Completed","App","isError","setIsError","visibleTodos","isLoaderShown","length","isNotFoundMessageShown","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.444b1a49.chunk.js","sourcesContent":["export enum Status {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\ntype SetStatusAction = {\n  type: 'filter/SET_STATUS';\n  payload: Status;\n};\n\ntype ClearQueryAction = {\n  type: 'filter/CLEAR_QUERY';\n};\n\ntype Action = SetQueryAction | SetStatusAction | ClearQueryAction;\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nexport const clearQuery = (): ClearQueryAction => ({\n  type: 'filter/CLEAR_QUERY',\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nexport type FilterState = {\n  query: string;\n  status: Status;\n};\n\nconst initialState: FilterState = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (\n  state: FilterState = initialState,\n  action: Action,\n): FilterState => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/CLEAR_QUERY':\n      return { ...state, query: '' };\n\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setQuery, setStatus, clearQuery };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodoAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodoAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: SetTodoAction,\n): Todo[] => {\n  if (action.type === 'todos/SET') {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  onTodoSelect: (value: Todo) => void;\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo?.id === todo.id },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onTodoSelect(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                  { 'fa-eye': selectedTodo?.id !== todo.id },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\n\nimport React from 'react';\nimport { Status } from '../../types/Status';\nimport { actions as filterActions } from '../../features/filter';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleQueryChange = (value: string) => dispatch(filterActions.setQuery(value));\n\n  const handleQueryClear = () => dispatch(filterActions.clearQuery());\n\n  const handleStatusChange = (value: Status) => dispatch(filterActions.setStatus(value));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form\n      onSubmit={handleFormSubmit}\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={e => handleStatusChange(e.target.value as Status)}\n          >\n            {Object.entries(Status).map(([key, value]) => (\n              <option value={value} key={value}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => handleQueryChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [currUser, setCurrUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useAppDispatch();\n\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  const handleTodoRemove = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  useEffect(() => {\n    if (!currentTodo) {\n      return;\n    }\n\n    getUser(currentTodo.userId)\n      .then(user => setCurrUser(user))\n      .catch(() => setCurrUser(null))\n      .finally(() => setIsLoading(false));\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleTodoRemove}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames(\n                  { 'has-text-danger': !currentTodo?.completed },\n                  { 'has-text-success': currentTodo?.completed },\n                )}\n              >\n                {currentTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              {currUser\n                ? (\n                  <a href={`mailto:${currUser.email}`}>\n                    {currUser.name}\n                  </a>\n                ) : (\n                  <span>\n                    Anonymous\n                  </span>\n                )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { createSelector } from 'reselect';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { RootState } from './app/store';\nimport { actions as currentTodoActions } from './features/currentTodo';\nimport { actions as todosActions } from './features/todos';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nconst setVisibleTodos = createSelector(\n  (state: RootState) => state.todos,\n  (state: RootState) => state.filter,\n  (todos, filter) => {\n    const isMatch = (str: string) => str.toLowerCase().includes(filter.query.toLowerCase());\n\n    return todos.filter(({ title, completed }) => {\n      switch (filter.status) {\n        case Status.Active:\n          return !completed && isMatch(title);\n\n        case Status.Completed:\n          return completed && isMatch(title);\n\n        default:\n          return isMatch(title);\n      }\n    });\n  },\n);\n\nexport const App: React.FC = () => {\n  const [isError, setIsError] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  const visibleTodos = useAppSelector(setVisibleTodos);\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const { query } = useAppSelector(state => state.filter);\n\n  const handleTodoSelect = (todo: Todo) => dispatch(currentTodoActions.setTodo(todo));\n\n  const isLoaderShown = !visibleTodos.length && !query && !isError;\n  const isNotFoundMessageShown = !visibleTodos.length && query && !isError;\n\n  useEffect(() => {\n    getTodos()\n      .then((todos) => dispatch(todosActions.setTodos(todos)))\n      .catch(() => setIsError(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            {!isError && (\n              <div className=\"block\">\n                <TodoFilter />\n              </div>\n            )}\n\n            <div className=\"block\">\n              {!!visibleTodos.length && (\n                <TodoList\n                  todos={visibleTodos}\n                  onTodoSelect={handleTodoSelect}\n                  selectedTodo={currentTodo}\n                />\n              )}\n\n              {isLoaderShown && (\n                <Loader />\n              )}\n\n              {isNotFoundMessageShown && (\n                <p className=\"notification is-warning\">\n                  There are no todos matching current filter criteria\n                </p>\n              )}\n\n              {isError && (\n                <p className=\"notification is-danger\">\n                  Oops! Something went wrong! Cannot load todos.\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}